# -*- coding: utf-8 -*-
"""language_classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lzpnxlZ8U7e5hNJKczLpk4wlKOoXAROz
"""

import tensorflow as tf
from handle_data import *
from language_classifier_architecture import *
from tensorflow.keras.preprocessing.image import ImageDataGenerator

from google.colab import drive
drive.mount('/content/drive')

path = "/content/drive/MyDrive/Training_data/"
dest_path = "/content/"

# save_image_language(path, dest_path)

# Define the data directory and the target size
trian_data_dir = '/content/dataset/training_dir'
validation_data_dir = '/content/dataset/training_dir'
target_size = (64, 64)

# Create an ImageDataGenerator with normalization
datagen = ImageDataGenerator(rescale=1./255)

# Load images from the data directory
train_data_loader = datagen.flow_from_directory(
    trian_data_dir,
    target_size=target_size,
    batch_size=16,
    class_mode='categorical'
)

# Load images from the data directory
validation_data_loader = datagen.flow_from_directory(
    validation_data_dir,
    target_size=target_size,
    batch_size=16,
    class_mode='categorical'
)

# define language classifier
model = CustomModel()

# compile model
model.compile(
    loss=tf.keras.losses.CategoricalCrossentropy(from_logits=False),
    optimizer=tf.keras.optimizers.Adam(lr=0.01),
    metrics=["accuracy"])

model.fit(train_data_loader,
          batch_size=16,
          epochs=5,
          verbose=1,
          validation_data = validation_data_loader
          )

